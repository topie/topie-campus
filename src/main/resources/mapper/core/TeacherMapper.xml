<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.topie.campus.core.dao.TeacherMapper">
    <resultMap id="BaseResultMap" type="com.topie.campus.core.model.Teacher">
        <!--
          WARNING - @mbggenerated
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="employee_no" jdbcType="VARCHAR" property="employeeNo"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="gender" jdbcType="BIT" property="gender"/>
        <result column="ethnic_group" jdbcType="SMALLINT" property="ethnicGroup"/>
        <result column="birth" jdbcType="DATE" property="birth"/>
        <result column="political_status" jdbcType="BIT" property="politicalStatus"/>
        <result column="academe" jdbcType="VARCHAR" property="academe"/>
        <result column="department" jdbcType="VARCHAR" property="department"/>
        <result column="contact_phone" jdbcType="VARCHAR" property="contactPhone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="graduated_university" jdbcType="VARCHAR" property="graduatedUniversity"/>
        <result column="graduated_major" jdbcType="VARCHAR" property="graduatedMajor"/>
        <result column="education_background" jdbcType="SMALLINT" property="educationBackground"/>
        <result column="degree" jdbcType="SMALLINT" property="degree"/>
        <result column="professional_title" jdbcType="VARCHAR" property="professionalTitle"/>
        <result column="professional_position" jdbcType="VARCHAR" property="professionalPosition"/>
        <result column="subject_direction" jdbcType="VARCHAR" property="subjectDirection"/>
        <result column="teacher_certificate_no" jdbcType="VARCHAR" property="teacherCertificateNo"/>
        <result column="main_teacher_certificate_no" jdbcType="VARCHAR" property="mainTeacherCertificateNo"/>
        <result column="staff_no" jdbcType="VARCHAR" property="staffNo"/>
        <result column="is_lab_staff" jdbcType="BIT" property="isLabStaff"/>
        <result column="short_introduce" jdbcType="VARCHAR" property="shortIntroduce"/>
        <result column="has_teacher_certificate" jdbcType="BIT" property="hasTeacherCertificate"/>
        <result column="teacher_type" jdbcType="VARCHAR" property="teacherType"/>
        <result column="teacher_lever" jdbcType="VARCHAR" property="teacherLever"/>
        <result column="is_outside" jdbcType="INTEGER" property="isOutside"/>
        <result column="short_name" jdbcType="VARCHAR" property="shortName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="teach_major" jdbcType="VARCHAR" property="teachMajor"/>
    </resultMap>
    <resultMap id="SimpleDtoResultMap" type="com.topie.campus.core.dto.TeacherSimpleDto">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="employee_no" jdbcType="VARCHAR" property="employeeNo"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="contact_phone" jdbcType="VARCHAR" property="contactPhone"/>
        <result column="is_bind" jdbcType="INTEGER" property="isBind"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="type_name" jdbcType="VARCHAR" property="typeName"/>
    </resultMap>
    <sql id="Base_Column_List">
    id,avatar,user_id,employee_no,name,gender,ethnic_group,birth,political_status,academe,department,contact_phone,email,graduated_university,graduated_major,education_background,degree,professional_title,professional_position,subject_direction,teacher_certificate_no,main_teacher_certificate_no,staff_no,is_lab_staff,short_introduce,has_teacher_certificate,teacher_type,teacher_lever,is_outside,short_name,password,teach_major
  </sql>
    <sql id="Simple_Base_Column_List">
        id,avatar,user_id,employee_no,name,gender,ethnic_group,birth,political_status,academe,department,contact_phone,email,graduated_university,graduated_major,education_background,degree,professional_title,professional_position,subject_direction,teacher_certificate_no,main_teacher_certificate_no,staff_no,is_lab_staff,has_teacher_certificate,teacher_type,teacher_lever,is_outside,short_name,password,teach_major
    </sql>
    <insert id="insertRelate">
        insert ignore into
        topie_campus.t_relate_student_teacher(type_id,student_id,teacher_id,student_no,employee_no)
        values(#{typeId},#{studentId},#{teacherId},#{studentNo},#{teacherNo})
    </insert>
    <delete id="deleteRelate">
        delete from topie_campus.t_relate_student_teacher where type_id=#{typeId} and student_id=#{studentId} and teacher_id=#{teacherId}
    </delete>
    <select id="findTeacherByPageNumAndPageSize" resultMap="BaseResultMap">
        select
        <include refid="Simple_Base_Column_List"/>
        from topie_campus.t_teacher
        <where>
            <if test="teacher.name!=null and teacher.name!=''">
                and `name` like concat('%',concat(#{teacher.name},'%'))
            </if>
        </where>
        <if test="teacher.sort_ != null and teacher.sort_ != ''">
            ${teacher.sort_}
        </if>
        <if test="pageOffset!=null and pageSize!=null">
            limit #{pageOffset},#{pageSize}
        </if>
    </select>
    <select id="countTeacher" resultType="java.lang.Long">
        select
        count(1)
        from topie_campus.t_teacher
        <where>
            <if test="teacher.name!=null and teacher.name!=''">
                and `name` like concat('%',concat(#{teacher.name},'%'))
            </if>
        </where>
    </select>
    <select id="selectOneByUserId" resultMap="BaseResultMap">
        select * from topie_campus.t_teacher
        where user_id=#{userId}
    </select>
    <select id="selectTeacherIdByUserId" resultType="java.lang.Integer">
        select id from topie_campus.t_teacher
        where user_id=#{userId}
    </select>
    <select id="selectTeacherNameByUserId" resultType="java.lang.String">
        select name from topie_campus.t_teacher
        where user_id=#{userId}
    </select>
    <select id="findTeacherSimpleDtoByStudentIdAndTypeIdAndPageNumAndPageSize" resultMap="SimpleDtoResultMap">
        select t.id,t.employee_no,t.name,t.contact_phone,if(st.student_id=#{studentId},1,0) is_bind
        from topie_campus.t_teacher t
        left join topie_campus.t_relate_student_teacher st on t.id=st.teacher_id and st.type_id = #{typeId} and st.student_id=#{studentId}
        inner join topie_campus.t_relate_teacher_teacher_type ttp on t.id=ttp.teacher_id and ttp.type_id = #{typeId}
        <where>
            <if test="teacher.name != null and teacher.name != ''">
                and t.name like concat('%',concat(#{teacher.name}, '%'))
            </if>
            <if test="teacher.employeeNo != null and teacher.employeeNo != ''">
                and t.employee_no like concat('%',concat(#{teacher.employeeNo}, '%'))
            </if>
            <if test="teacher.contactPhone != null and teacher.contactPhone != ''">
                and t.contact_phone like concat('%',concat(#{teacher.contactPhone}, '%'))
            </if>
            <if test="teacher.isBind != null and teacher.isBind == 0">
                and st.student_id is null
            </if>
            <if test="teacher.isBind != null and teacher.isBind == 1">
                and st.student_id is not null
            </if>
        </where>
        order by is_bind desc,t.id asc
        <if test="pageOffset!=null and pageSize!=null">
            limit #{pageOffset},#{pageSize}
        </if>
    </select>
    <select id="countTeacherSimpleDtoListByTeacherId" resultType="java.lang.Long">
        select count(1)
        from topie_campus.t_teacher t
        left join topie_campus.t_relate_student_teacher st on t.id=st.teacher_id and st.type_id = #{typeId} and st.student_id=#{studentId}
        inner join topie_campus.t_relate_teacher_teacher_type ttp on t.id=ttp.teacher_id and ttp.type_id = #{typeId}
        <where>
            ttp.type_id = #{typeId}
            <if test="teacher.name != null and teacher.name != ''">
                and t.name like concat('%',concat(#{teacher.name}, '%'))
            </if>
            <if test="teacher.employeeNo != null and teacher.employeeNo != ''">
                and t.employee_no like concat('%',concat(#{teacher.employeeNo}, '%'))
            </if>
            <if test="teacher.contactPhone != null and teacher.contactPhone != ''">
                and t.contact_phone like concat('%',concat(#{teacher.contactPhone}, '%'))
            </if>
            <if test="teacher.isBind != null and teacher.isBind == 0">
                and st.student_id is null
            </if>
            <if test="teacher.isBind != null and teacher.isBind == 1">
                and st.student_id is not null
            </if>
        </where>
    </select>
    <select id="selectIdByEmployeeNo" resultType="java.lang.Integer">
        select id from topie_campus.t_teacher where employee_no=#{employeeNo}
    </select>
    <select id="findTeacherByStudentIdAndTypeId" resultType="com.topie.campus.core.dto.TeacherSimpleDto">
        select t.id,t.name,t.employee_no employeeNo,t.avatar from topie_campus.t_teacher t left join topie_campus.t_relate_student_teacher st
        on t.id = st.teacher_id
        where st.student_id=#{studentId} and st.type_id=#{typeId}
    </select>
    <select id="findTeacherByAndTypeId" resultType="com.topie.campus.core.dto.TeacherSimpleDto">
        select t.id,t.name,t.employee_no ,t.avatar from topie_campus.t_teacher t left join topie_campus.t_relate_student_teacher st
        on t.id = st.teacher_id
        where st.type_id=#{typeId}
        group by t.id
    </select>

    <select id="findTeacherByStudentNo" resultMap="SimpleDtoResultMap">
        select
        t.id,t.user_id,t.name,t.employee_no,t.avatar,t.contact_phone,t.email,GROUP_CONCAT(DISTINCT ttpn.type_name) as
        type_name
        from t_teacher t left join topie_campus.t_relate_student_teacher st
        on t.id = st.teacher_id left join t_teacher_type ttpn on ttpn.type_id = st.type_id
        where st.student_id=#{studentId}
        group by t.id
        <if test="pageOffset!=null and pageSize!=null">
            limit #{pageOffset},#{pageSize}
        </if>
    </select>

    <select id="findCountTeacherByStudentNo" resultType="java.lang.Long">
 select count(*) from (select
        count(t.id) from topie_campus.t_teacher t left join topie_campus.t_relate_student_teacher st
        on t.id = st.teacher_id
        left join topie_campus.t_relate_teacher_teacher_type ttp
        on t.id=ttp.teacher_id left join t_teacher_type ttpn on ttpn.type_id = ttp.type_id
        where st.student_id=#{studentId}
           group by t.id) t
    </select>
</mapper>
